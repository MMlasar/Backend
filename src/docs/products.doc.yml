openapi: 3.0.0
info:
  title: Product API
  version: 1.0.0
  description: API for managing products

servers:
  - url: https://api.example.com/v1

components:
  schemas:
    Product:
      type: object
      properties:
        title:
          type: string
          description: Title of the product
        photo:
          type: string
          description: URL of the product photo
        stock:
          type: integer
          description: Stock quantity of the product
          default: 10
        price:
          type: number
          format: float
          description: Price of the product
          default: 50.0
      required:
        - title
        - photo
      example:
        title: "Product Name"
        photo: "https://example.com/product.jpg"
        stock: 10
        price: 50.0

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token

paths:
  /api/products:
    get:
      summary: Retrieve all products
      tags:
        - Products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal Server Error

    post:
      summary: Create a new product
      tags:
        - Products
      requestBody:
        required: true
        description: Data of the product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api/products/{productId}:
    get:
      summary: Retrieve a product by ID
      tags:
        - Products
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: string
          description: ID of the product to retrieve
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
        '500':
          description: Internal Server Error

    put:
      summary: Update a product by ID
      tags:
        - Products
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: string
          description: ID of the product to update
      requestBody:
        required: true
        description: Updated data of the product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request
        '404':
          description: Product not found
        '500':
          description: Internal Server Error

    delete:
      summary: Delete a product by ID
      tags:
        - Products
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: string
          description: ID of the product to delete
      responses:
        '204':
          description: No Content
        '404':
          description: Product not found
        '500':
          description: Internal Server Error

